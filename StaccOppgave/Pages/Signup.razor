@page "/signup"
@layout LoginLayout
@inject NavigationManager navigator

<h3>Sign Up</h3>

<div class="form-container">
    
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" id="username" class="form-control" @bind="username" />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" class="form-control" @bind="email" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" class="form-control" @bind="password" />
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input type="password" id="confirmPassword" class="form-control" @bind="confirmPassword" />
        </div>
        <br />
        <button type="submit" class="btn btn-primary" @onclick="SignUp">Sign Up</button>
        <br />
    @if (!string.IsNullOrEmpty(errormessage))
    {
        <div class="alert alert-danger">@errormessage</div>
    }
    
</div>

@code {
    private string username;
    private string email;
    private string password;
    private string confirmPassword;
    private string errormessage;

    private async Task SignUp()
    {
        if(string.IsNullOrEmpty(username)) 
        {
            errormessage = "Invalid username";
        }
        if (!password.Equals(confirmPassword))
        {
            errormessage = "Passwords do not match";
            return;
        }
        if (string.IsNullOrWhiteSpace(email) || !email.Contains("@"))
        {
            errormessage = "Please enter a valid email address.";
            return;
        }

        try
        {
            var newUser = new
            {
                Username = username,
                Email = email,
                PasswordHash = password 
            };

            using (var client = new HttpClient())
            {
                var apiUrl = $"https://localhost:7064/User/CreateUser";
                var response = await client.PostAsJsonAsync(apiUrl, newUser);


                if (response.IsSuccessStatusCode)
                {
                    navigator.NavigateTo("/");
                }
                else
                {
                    errormessage = "Failed to create an account. Please try again later.";
                }
            }
        }
        catch (Exception ex)
        {
            errormessage = "An error occurred: " + ex.Message;
        }
    }
}
